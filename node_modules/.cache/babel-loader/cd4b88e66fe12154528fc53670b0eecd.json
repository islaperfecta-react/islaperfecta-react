{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\justo\\\\Desktop\\\\islaperfecta_react\\\\src\\\\App.js\";\nimport React from 'react';\nimport io from \"socket.io-client\";\nimport $ from \"jquery\";\nimport logo from \"./logo.svg\";\nimport './App.css';\nconst colors = ['red', 'green', 'blue', 'magenta', 'purple', 'plum', 'orange'];\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      username: null,\n      color: colors[Math.floor(Math.random() * colors.length)],\n      uid: null,\n      messages: []\n    };\n    this.socket = io('localhost:8080');\n    this.socket.on('RECEIVE_MESSAGE', function (data) {\n      addMessage(data);\n    });\n\n    const addMessage = data => {\n      let result = data;\n\n      if (result.type == 'message') {\n        this.setState(state => {\n          const messages = [...state.messages, {\n            username: result.username,\n            message: result.message,\n            color: result.color,\n            timestamp: result.timestamp\n          }];\n          return {\n            messages\n          };\n        });\n      }\n\n      if (result.type == 'history') {\n        result.messageArray.map(message => this.setState(state => {\n          const messages = [{\n            username: message.username,\n            color: message.color,\n            message: message.message,\n            timestamp: message.timestamp\n          }, ...state.messages];\n        }));\n      }\n    };\n\n    this.sendMessage = message => {\n      this.socket.emit('SEND_MESSAGE', {\n        username: this.state.username,\n        color: this.state.color,\n        message: message,\n        timestamp: Date.now(),\n        type: 'message'\n      }, function (answer) {});\n    };\n\n    this.handleKeyDown = e => {\n      if (e.keyCode === 13 && this.state.username === null) {\n        this.setState({\n          username: e.target.value\n        });\n      } else if (e.keyCode === 13 && this.state.username !== null) {\n        this.sendMessage(e.target.value);\n      }\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 5\n      }\n    }, this.state.messages.map(message => /*#__PURE__*/React.createElement(\"p\", {\n      key: \"message\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }\n    }, message.username))), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      onKeyDown: this.handleKeyDown,\n      placeholder: \"USERNAME\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 7\n      }\n    });\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["C:/Users/justo/Desktop/islaperfecta_react/src/App.js"],"names":["React","io","$","colors","App","Component","constructor","props","state","username","color","Math","floor","random","length","uid","messages","socket","on","data","addMessage","result","type","setState","message","timestamp","messageArray","map","sendMessage","emit","Date","now","answer","handleKeyDown","e","keyCode","target","value","render"],"mappings":"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","sourcesContent":["import React from 'react';\nimport io from \"socket.io-client\";\nimport $ from \"jquery\";\nimport logo from './logo.svg';\nimport './App.css';\nconst colors = [ 'red', 'green', 'blue', 'magenta', 'purple', 'plum', 'orange' ];\n\nclass App extends React.Component {\n  constructor(props){\n    super(props);\n    this.state = {\n      username: null,\n      color: colors[ Math.floor( Math.random() * colors.length )],\n      uid: null,\n      messages: []\n    }\n\n  this.socket = io('localhost:8080');\n\n  this.socket.on('RECEIVE_MESSAGE', function(data){\n      addMessage(data);\n  });\n\n  const addMessage = data => {\n    let result = data;\n    if(result.type == 'message'){\n    this.setState(state => {\n      const messages = [...state.messages, {\n        username: result.username,\n        message: result.message,\n        color: result.color,\n        timestamp: result.timestamp,\n      }]\n      return{\n        messages,\n      }\n    })\n  }\n    if(result.type == 'history'){\n        result.messageArray.map(message =>\n          this.setState( state => {\n            const messages = [{\n              username: message.username,\n              color: message.color,\n              message: message.message,\n              timestamp: message.timestamp,\n            }, ...state.messages]\n          })\n      )}\n    }\n\n    this.sendMessage = (message) => {\n        this.socket.emit('SEND_MESSAGE', {\n            username: this.state.username,\n            color: this.state.color,\n            message: message,\n            timestamp: Date.now(),\n            type: 'message',\n        }, function(answer){});\n\n    }\n\n    this.handleKeyDown = (e) => {\n      if(e.keyCode === 13 && this.state.username === null){\n        this.setState({username: e.target.value});\n      }\n      else if (e.keyCode === 13 && this.state.username !== null){\n        this.sendMessage(e.target.value);\n      }\n    }\n}\n  render (){\n    return(\n    <div>\n      {this.state.messages.map(message =>\n        <p key=\"message\">{ message.username }</p>\n    )}\n</div>,\n      <input type=\"text\" onKeyDown={this.handleKeyDown} placeholder=\"USERNAME\" />\n  )}\n\n  }\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}