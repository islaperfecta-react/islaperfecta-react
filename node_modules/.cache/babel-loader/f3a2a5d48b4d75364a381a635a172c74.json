{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\justo\\\\Desktop\\\\islaperfecta_react\\\\src\\\\App.js\";\nimport React from 'react';\nimport io from \"socket.io-client\";\nimport $ from \"jquery\";\nimport logo from \"./logo.svg\";\nimport './App.css';\nconst colors = ['red', 'green', 'blue', 'magenta', 'purple', 'plum', 'orange'];\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      username: null,\n      color: colors[Math.floor(Math.random() * colors.length)],\n      uid: null,\n      message: '',\n      messages: []\n    };\n    this.socket = io('localhost:8080');\n    this.socket.on('RECEIVE_MESSAGE', function (data) {\n      addMessage(data);\n    });\n\n    const addMessage = data => {\n      let result = JSON.parse(data);\n\n      if (result.type == 'message') {\n        this.setState(state => {\n          const messages = [...state.messages, {\n            user: result.user,\n            color: result.color,\n            message: result.message,\n            timestamp: result.timestamp\n          }];\n          return {\n            messages\n          };\n        });\n      }\n\n      if (result.type == 'history') {\n        result.messageArray.map(message => this.setState(state => {\n          const messages = [{\n            user: message.user,\n            color: message.color,\n            message: message.message,\n            timestamp: message.timestamp\n          }, ...state.messages];\n        }));\n      }\n    };\n\n    this.sendMessage = () => {\n      this.socket.emit('SEND_MESSAGE', {\n        user: this.state.username,\n        color: this.state.color,\n        message: this.state.message,\n        type: 'message'\n      });\n      this.setState({\n        message: ''\n      });\n    };\n\n    this.handleKeyDown = e => {\n      alert(1);\n\n      if (e.key === 'Enter' && this.username === null) {\n        this.setState({\n          username: 'justoooo'\n        });\n      } else if (e.key === 'Enter' && this.username !== null) {\n        this.setState({\n          message: e.target.value\n        });\n        this.sendMessage();\n      }\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 5\n      }\n    }, this.state.messages.map(message => /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }\n    }, message.user, \": \", message.message))), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      onKeyDown: this.handleKeyDown,\n      placeholder: \"USERNAME\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 7\n      }\n    });\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["C:/Users/justo/Desktop/islaperfecta_react/src/App.js"],"names":["React","io","$","colors","App","Component","constructor","props","state","username","color","Math","floor","random","length","uid","message","messages","socket","on","data","addMessage","result","JSON","parse","type","setState","user","timestamp","messageArray","map","sendMessage","emit","handleKeyDown","e","alert","key","target","value","render"],"mappings":"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","sourcesContent":["import React from 'react';\nimport io from \"socket.io-client\";\nimport $ from \"jquery\";\nimport logo from './logo.svg';\nimport './App.css';\nconst colors = [ 'red', 'green', 'blue', 'magenta', 'purple', 'plum', 'orange' ];\n\nclass App extends React.Component {\n  constructor(props){\n    super(props);\n    this.state = {\n      username: null,\n      color: colors[ Math.floor( Math.random() * colors.length )],\n      uid: null,\n      message: '',\n      messages: []\n    }\n\n  this.socket = io('localhost:8080');\n\n  this.socket.on('RECEIVE_MESSAGE', function(data){\n      addMessage(data);\n  });\n\n  const addMessage = data => {\n    let result = JSON.parse(data);\n    if(result.type == 'message'){\n    this.setState(state => {\n      const messages = [...state.messages, {\n        user: result.user,\n        color: result.color,\n        message: result.message,\n        timestamp: result.timestamp,\n      }]\n      return{\n        messages,\n      }\n    })\n  }\n    if(result.type == 'history'){\n        result.messageArray.map(message =>\n          this.setState( state => {\n            const messages = [{\n              user: message.user,\n              color: message.color,\n              message: message.message,\n              timestamp: message.timestamp,\n            }, ...state.messages]\n          })\n      )}\n    }\n\n    this.sendMessage = () => {\n        this.socket.emit('SEND_MESSAGE', {\n            user: this.state.username,\n            color: this.state.color,\n            message: this.state.message,\n            type: 'message',\n        })\n        this.setState({message: ''});\n\n    }\n\n    this.handleKeyDown = (e) => {\n      alert(1);\n      if(e.key === 'Enter' && this.username === null){\n        this.setState({username: 'justoooo'});\n      }\n      else if (e.key === 'Enter' && this.username !== null){\n        this.setState({message: e.target.value});\n        this.sendMessage();\n      }\n    }\n}\n  render (){\n    return(\n    <div>\n      {this.state.messages.map(message =>\n        <p>\n        {message.user}: {message.message}\n      </p>\n    )}\n</div>,\n      <input type=\"text\" onKeyDown={this.handleKeyDown} placeholder=\"USERNAME\" />\n  )}\n\n  }\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}